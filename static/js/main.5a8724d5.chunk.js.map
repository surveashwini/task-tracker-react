{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","components/TaskTracker.js","App.js","reportWebVitals.js","index.js"],"names":["Button","title","color","click","className","style","backgroundColor","onClick","defaultProps","Header","showAddTask","onAdd","location","useLocation","pathname","Task","task","deleteTask","toggleReminder","reminder","onDoubleClick","text","day","Tasks","tasks","addTask","map","id","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","TaskTracker","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","method","headers","body","JSON","stringify","filter","taskToToggle","updatedTask","result","path","exact","render","props","length","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a8724d5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ title, color, click}) => {\n    return (\n        <button className=\"btn\" style={{ backgroundColor: color}} onClick={click}>{title}</button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n}\n\nexport default Button\n","import Button from \"./Button\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Header = ({ showAddTask, onAdd }) => {\n  const location = useLocation();\n  return (\n    <div className=\"header\">\n      <h1>Task Tracker</h1>\n\n      {location.pathname === \"/\" && (\n        <Button\n          title={showAddTask ? \"Close\" : \"Add\"}\n          color={showAddTask ? \"red\" : \"green\"}\n          click={onAdd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, deleteTask, toggleReminder }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\n      onDoubleClick={toggleReminder}\n    >\n      <h3>\n        {task.text}\n        <FaTimes style={{ color: \"red\" }} onClick={deleteTask} />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ tasks, addTask, deleteTask, toggleReminder }) => {\n  return tasks.map((task) => (\n    <div key={task.id}>\n      <Task\n        task={task}\n        deleteTask={() => deleteTask(task.id)}\n        toggleReminder={() => toggleReminder(task.id)}\n      />\n    </div>\n  ));\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({ addTask }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      alert(\"Please add task\");\n      return;\n    }\n\n    addTask({ text, day, reminder });\n    setText(\"\");\n    setDay(\"\");\n    setReminder(\"\");\n  };\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day & Time\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import { Link } from \"react-router-dom\";\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021</p>\n      <Link to=\"/about\">About</Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 1.0.0</h4>\n      <Link to=\"/\">Go Back </Link>\n    </div>\n  );\n};\n\nexport default About;\n","import Header from \"./Header\";\nimport Tasks from \"./Tasks\";\nimport { useState, useEffect } from \"react\";\nimport AddTask from \"./AddTask\";\nimport Footer from \"./Footer\";\nimport About from \"./About\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst TaskTracker = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  };\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const result = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedTask),\n    });\n\n    const data = await result.json();\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...data, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <Router>\n      <div>\n        <Header\n          showAddTask={showAddTask}\n          onAdd={() => setShowAddTask(!showAddTask)}\n        />\n\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <>\n              {showAddTask && <AddTask addTask={(task) => addTask(task)} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  deleteTask={deleteTask}\n                  toggleReminder={toggleReminder}\n                />\n              ) : (\n                \"No tasks to show\"\n              )}\n            </>\n          )}\n        />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default TaskTracker;\n","import TaskTracker from './components/TaskTracker'\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <TaskTracker />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}