{"version":3,"sources":["components/elements/Task/Task.js","components/containers/Tasks/Tasks.js","components/containers/AddTask/AddTask.js","components/elements/Button/Button.js","components/elements/Header/Header.js","components/elements/Footer/Footer.js","components/elements/About/About.js","components/containers/TaskTracker/TaskTracker.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","deleteTask","toggleReminder","className","reminder","onDoubleClick","text","style","color","onClick","day","Tasks","tasks","addTask","map","id","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","title","click","backgroundColor","defaultProps","Header","showAddTask","onAdd","location","useLocation","pathname","Footer","to","About","TaskTracker","setShowAddTask","setTasks","serverUrl","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","method","headers","body","JSON","stringify","filter","taskToToggle","updatedTask","result","path","exact","render","props","length","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb47d8ed.chunk.js","sourcesContent":["import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, deleteTask, toggleReminder }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\n      onDoubleClick={toggleReminder}\n    >\n      <h3>\n        {task.text}\n        <FaTimes style={{ color: \"red\" }} onClick={deleteTask} />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"../../elements/Task/Task\";\n\nconst Tasks = ({ tasks, addTask, deleteTask, toggleReminder }) => {\n  return tasks.map((task) => (\n    <div key={task.id}>\n      <Task\n        task={task}\n        deleteTask={() => deleteTask(task.id)}\n        toggleReminder={() => toggleReminder(task.id)}\n      />\n    </div>\n  ));\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nconst AddTask = ({ addTask }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!text) {\n      alert(\"Please add task\");\n      return;\n    }\n\n    addTask({ text, day, reminder });\n    setText(\"\");\n    setDay(\"\");\n    setReminder(\"\");\n  };\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day & Time\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n      <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ title, color, click}) => {\n    return (\n        <button className=\"btn\" style={{ backgroundColor: color}} onClick={click}>{title}</button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n}\n\nexport default Button\n","import Button from \"../Button/Button\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Header = ({ showAddTask, onAdd }) => {\n  const location = useLocation();\n  return (\n    <div className=\"header\">\n      <h1>Task Tracker</h1>\n\n      {location.pathname === \"/task-tracker-react/\" && (\n        <Button\n          title={showAddTask ? \"Close\" : \"Add\"}\n          color={showAddTask ? \"red\" : \"green\"}\n          click={onAdd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Header;\n","import { Link } from \"react-router-dom\";\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021</p>\n      <Link to=\"/task-tracker-react/about\">About</Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 1.0.0</h4>\n      <Link to=\"/task-tracker-react/\">Go Back </Link>\n    </div>\n  );\n};\n\nexport default About;\n","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Tasks from \"../Tasks/Tasks\";\nimport AddTask from \"../AddTask/AddTask\";\n\nimport Header from \"../../elements/Header/Header\";\nimport Footer from \"../../elements/Footer/Footer\";\nimport About from \"../../elements/About/About\";\n\nconst TaskTracker = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const serverUrl =\n    \"https://my-json-server.typicode.com/surveashwini/task-tracker-data/tasks/\";\n\n  // use effect to fetch tasks from server\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // REST call to fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch(serverUrl);\n    const data = await res.json();\n    return data;\n  };\n\n  // REST call to fetch task\n  const fetchTask = async (id) => {\n    const res = await fetch(`${serverUrl}${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  // REST call to add task\n  const addTask = async (task) => {\n    const res = await fetch(serverUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  };\n\n  // REST call to delete task\n  const deleteTask = async (id) => {\n    await fetch(`${serverUrl}${id}`, {\n      method: \"DELETE\",\n    });\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // REST call to toggle task's reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const result = await fetch(`${serverUrl}${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updatedTask),\n    });\n\n    const data = await result.json();\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...data, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <Router>\n      <div>\n        <Header\n          showAddTask={showAddTask}\n          onAdd={() => setShowAddTask(!showAddTask)}\n        />\n\n        <Route\n          path=\"/task-tracker-react/\"\n          exact\n          render={(props) => (\n            <>\n              {showAddTask && <AddTask addTask={(task) => addTask(task)} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  deleteTask={deleteTask}\n                  toggleReminder={toggleReminder}\n                />\n              ) : (\n                \"No tasks to show\"\n              )}\n            </>\n          )}\n        />\n        <Route path=\"/task-tracker-react/about\" component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default TaskTracker;\n","import TaskTracker from \"./components/containers/TaskTracker/TaskTracker\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <TaskTracker />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}